#!/bin/bash

echo "üß™ Test de l'organisation FONCTIONNELLE de stepRoutes.js"
echo "======================================================"

cd "$(dirname "$0")"

# Test syntaxe
echo "üìã Test 1: V√©rification syntaxe..."
node -c server/routes/stepRoutes.js
if [ $? -eq 0 ]; then
    echo "‚úÖ Syntaxe correcte"
else
    echo "‚ùå Erreur syntaxe"
    exit 1
fi

# Analyse fonctionnelle
echo "üìã Test 2: Analyse des modules fonctionnels..."

STORY_COUNT=$(grep -c "story" server/routes/stepRoutes.js)
HIKE_COUNT=$(grep -c "hike\|trail" server/routes/stepRoutes.js)
STEP_CRUD=$(grep -c "router\.[get|put|delete]('/:idStep'" server/routes/stepRoutes.js)
TRAVEL_COUNT=$(grep -c "travel-time" server/routes/stepRoutes.js)

echo "   üìñ R√âCITS & STORIES: $STORY_COUNT routes"
echo "   ü•æ RANDONN√âES: $HIKE_COUNT routes"  
echo "   üöó TEMPS TRAJET: $TRAVEL_COUNT routes"

# V√©rification groupement
echo "üìã Test 3: V√©rification du groupement fonctionnel..."

GESTION_SECTION=$(grep -n "GESTION STEP" server/routes/stepRoutes.js | cut -d: -f1)
RECITS_SECTION=$(grep -n "R√âCITS & STORIES" server/routes/stepRoutes.js | cut -d: -f1)
RANDO_SECTION=$(grep -n "RANDONN√âES & TRAILS" server/routes/stepRoutes.js | cut -d: -f1)
TEMPS_SECTION=$(grep -n "TEMPS DE TRAJET" server/routes/stepRoutes.js | cut -d: -f1)

if [ ! -z "$GESTION_SECTION" ] && [ ! -z "$RECITS_SECTION" ] && [ ! -z "$RANDO_SECTION" ] && [ ! -z "$TEMPS_SECTION" ]; then
    echo "‚úÖ Tous les modules fonctionnels pr√©sents"
    echo "   - GESTION STEP: ligne $GESTION_SECTION"
    echo "   - R√âCITS: ligne $RECITS_SECTION" 
    echo "   - RANDONN√âES: ligne $RANDO_SECTION"
    echo "   - TEMPS TRAJET: ligne $TEMPS_SECTION"
else
    echo "‚ùå Modules fonctionnels manquants"
    exit 1
fi

# Ordre logique
if [ "$GESTION_SECTION" -lt "$RECITS_SECTION" ] && [ "$RECITS_SECTION" -lt "$RANDO_SECTION" ] && [ "$RANDO_SECTION" -lt "$TEMPS_SECTION" ]; then
    echo "‚úÖ Ordre logique respect√©"
else
    echo "‚ö†Ô∏è  Ordre des sections √† v√©rifier"
fi

echo ""
echo "üéâ Organisation fonctionnelle valid√©e !"
echo "üìä R√©sum√©:"
echo "   - Lignes totales: $(wc -l < server/routes/stepRoutes.js)"
echo "   - Routes R√âCITS: $STORY_COUNT (module principal)"
echo "   - Routes RANDONN√âES: $HIKE_COUNT (feature importante)" 
echo "   - Routes TRAJET: $TRAVEL_COUNT (utilitaire)"
echo "   - Organisation: ‚úÖ Par module fonctionnel"

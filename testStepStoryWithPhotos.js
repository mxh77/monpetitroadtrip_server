/**
 * Script de test pour l'API de g√©n√©ration de r√©cit de step avec photos
 * Ce script peut √™tre utilis√© pour tester l'endpoint /api/steps/{idStep}/story/with-photos
 */

import axios from 'axios';

// Configuration
const BASE_URL = 'http://localhost:3000'; // Ajustez selon votre configuration
const STEP_ID = 'YOUR_STEP_ID_HERE'; // Remplacez par un ID de step valide avec des photos
const AUTH_TOKEN = 'YOUR_JWT_TOKEN_HERE'; // Remplacez par un token JWT valide

async function testStepStoryWithPhotos() {
    try {
        console.log('üöÄ Test de g√©n√©ration de r√©cit de step avec photos...');
        console.log(`üìç URL: ${BASE_URL}/api/steps/${STEP_ID}/story/with-photos`);
        
        const response = await axios.get(`${BASE_URL}/api/steps/${STEP_ID}/story/with-photos`, {
            headers: {
                'Authorization': `Bearer ${AUTH_TOKEN}`,
                'Content-Type': 'application/json'
            }
        });

        console.log('‚úÖ Succ√®s! R√©cit g√©n√©r√© avec photos:');
        console.log('üìñ R√©cit:', response.data.story);
        console.log('ü§ñ Mod√®le utilis√©:', response.data.model);
        console.log('üì∏ Photos analys√©es:', response.data.photosAnalyzed);
        console.log('üìä Donn√©es utilis√©es:', response.data.dataUsed);
        console.log('üîó Sources des photos:', response.data.photosSources);
        console.log('üïê G√©n√©r√© √†:', response.data.generatedAt);
        
    } catch (error) {
        console.error('‚ùå Erreur lors du test:', error.response?.data || error.message);
        
        if (error.response?.status === 401) {
            console.log('üîê V√©rifiez votre token d\'authentification');
        } else if (error.response?.status === 404) {
            console.log('üìç V√©rifiez l\'ID du step');
        } else if (error.response?.status === 400) {
            console.log('üì∏ Ce step ne contient aucune photo √† analyser');
        } else if (error.response?.status === 503) {
            console.log('ü§ñ Service IA temporairement indisponible');
        }
    }
}

async function testCompareStoryWithAndWithoutPhotos() {
    try {
        console.log('\nüîÑ Comparaison r√©cit avec et sans photos...');
        
        // Test sans photos forc√©es
        console.log('üìù G√©n√©ration standard...');
        const standardResponse = await axios.get(`${BASE_URL}/api/steps/${STEP_ID}/story`, {
            headers: { 'Authorization': `Bearer ${AUTH_TOKEN}` }
        });
        
        // Test avec photos forc√©es
        console.log('üì∏ G√©n√©ration avec photos...');
        const photosResponse = await axios.get(`${BASE_URL}/api/steps/${STEP_ID}/story/with-photos`, {
            headers: { 'Authorization': `Bearer ${AUTH_TOKEN}` }
        });
        
        console.log('\nüìä Comparaison des r√©sultats:');
        console.log('Standard:');
        console.log(`  - Mod√®le: ${standardResponse.data.model || 'gpt-4o-mini'}`);
        console.log(`  - Photos analys√©es: ${standardResponse.data.photosAnalyzed || 0}`);
        console.log(`  - Longueur du r√©cit: ${standardResponse.data.story.length} caract√®res`);
        
        console.log('Avec photos:');
        console.log(`  - Mod√®le: ${photosResponse.data.model}`);
        console.log(`  - Photos analys√©es: ${photosResponse.data.photosAnalyzed}`);
        console.log(`  - Longueur du r√©cit: ${photosResponse.data.story.length} caract√®res`);
        console.log(`  - Sources: ${photosResponse.data.photosSources.map(p => p.type).join(', ')}`);
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la comparaison:', error.response?.data || error.message);
    }
}

// Instructions d'utilisation
console.log(`
üìù Instructions pour utiliser ce script de test:

1. D√©marrez votre serveur: npm start
2. Remplacez STEP_ID par un ID de step valide qui contient des photos
3. Remplacez AUTH_TOKEN par un token JWT valide d'un utilisateur authentifi√©
4. Ex√©cutez: node testStepStoryWithPhotos.js

üí° Pour obtenir un token JWT:
   - Connectez-vous via l'API /api/auth/login
   - Utilisez le token retourn√© dans la r√©ponse

üí° Pour obtenir un ID de step avec photos:
   - Utilisez l'API /api/roadtrips/{idRoadtrip}/steps pour lister les steps
   - Choisissez un step qui a des accommodations/activit√©s avec des photos
   - V√©rifiez qu'il y a des photos avec /api/accommodations/{id}/photos ou /api/activities/{id}/photos

üîç Fonctionnalit√©s test√©es:
   - G√©n√©ration de r√©cit avec analyse de photos (GPT-4 Vision)
   - Validation de la pr√©sence de photos
   - Comparaison avec/sans photos
   - Gestion des erreurs
`);

// D√©commentez la ligne suivante pour ex√©cuter le test
// testStepStoryWithPhotos();

// D√©commentez la ligne suivante pour ex√©cuter la comparaison
// testCompareStoryWithAndWithoutPhotos();

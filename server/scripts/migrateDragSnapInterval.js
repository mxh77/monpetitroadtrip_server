import mongoose from 'mongoose';
import UserSetting from '../models/UserSetting.js';
import { connectDB } from '../config/db.js';

/**
 * Script de migration pour ajouter le param√®tre dragSnapInterval aux utilisateurs existants
 * Usage: node server/scripts/migrateDragSnapInterval.js
 */

const migrateDragSnapInterval = async () => {
    try {
        console.log('üöÄ D√©but de la migration dragSnapInterval...');
        
        // Se connecter √† la base de donn√©es
        await connectDB();
        
        // Rechercher tous les param√®tres utilisateur sans dragSnapInterval
        const settingsWithoutDragSnap = await UserSetting.find({
            dragSnapInterval: { $exists: false }
        });
        
        console.log(`üìä ${settingsWithoutDragSnap.length} utilisateur(s) trouv√©(s) sans dragSnapInterval`);
        
        if (settingsWithoutDragSnap.length === 0) {
            console.log('‚úÖ Aucune migration n√©cessaire, tous les utilisateurs ont d√©j√† le param√®tre dragSnapInterval');
            return;
        }
        
        // Mettre √† jour tous les param√®tres sans dragSnapInterval
        const result = await UserSetting.updateMany(
            { dragSnapInterval: { $exists: false } },
            { $set: { dragSnapInterval: 15 } } // Valeur par d√©faut
        );
        
        console.log(`‚úÖ Migration termin√©e avec succ√®s:`);
        console.log(`   - ${result.modifiedCount} utilisateur(s) mis √† jour`);
        console.log(`   - Valeur par d√©faut appliqu√©e: 15 minutes`);
        
        // V√©rification
        const totalSettings = await UserSetting.countDocuments();
        const settingsWithDragSnap = await UserSetting.countDocuments({
            dragSnapInterval: { $exists: true }
        });
        
        console.log(`üîç V√©rification:`);
        console.log(`   - Total des param√®tres utilisateur: ${totalSettings}`);
        console.log(`   - Avec dragSnapInterval: ${settingsWithDragSnap}`);
        
        if (totalSettings === settingsWithDragSnap) {
            console.log('‚úÖ Migration v√©rifi√©e avec succ√®s!');
        } else {
            console.log('‚ö†Ô∏è Attention: Certains utilisateurs n\'ont toujours pas le param√®tre');
        }
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la migration:', error);
        process.exit(1);
    } finally {
        // Fermer la connexion
        await mongoose.connection.close();
        console.log('üîå Connexion ferm√©e');
        process.exit(0);
    }
};

// Ex√©cuter la migration
migrateDragSnapInterval();

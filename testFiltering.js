/**
 * Test rapide du filtrage g√©ographique dans l'API Activity
 */
import 'dotenv/config';

async function testGeographicFiltering() {
    console.log('=== Test du filtrage g√©ographique c√¥t√© serveur ===\n');
    
    // Simulation d'une requ√™te vers l'endpoint
    const testUrl = 'http://localhost:3001/api/activities/TEST_ID/search/algolia';
    
    console.log('Pour tester le filtrage g√©ographique:');
    console.log('1. D√©marrez le serveur avec "npm start"');
    console.log('2. Cr√©ez une activit√© avec des coordonn√©es');
    console.log('3. Appelez GET /api/activities/{id}/search/algolia');
    console.log('4. V√©rifiez les logs du serveur pour voir le filtrage en action\n');
    
    console.log('Exemple de test avec curl:');
    console.log(`curl -X GET "${testUrl}?hitsPerPage=10" \\`);
    console.log('  -H "Authorization: Bearer YOUR_TOKEN" \\');
    console.log('  -H "Content-Type: application/json"\n');
    
    console.log('Attendu dans les logs:');
    console.log('- üìè Filtrage g√©ographique: X ‚Üí Y r√©sultats (rayon 50km)');
    console.log('- Distances des r√©sultats filtr√©s avec indication de la source');
    console.log('- Toutes les distances ‚â§ 50km\n');
    
    console.log('Dans la r√©ponse JSON:');
    console.log('- Champ "search.radiusKm": 50');
    console.log('- Champ "search.filteredResults": true');
    console.log('- Champs "distance" et "distanceKm" dans chaque suggestion');
}

testGeographicFiltering();
